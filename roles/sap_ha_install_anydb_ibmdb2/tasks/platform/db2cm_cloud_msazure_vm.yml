# SPDX-License-Identifier: Apache-2.0
---

- name: SAP HA AnyDB - IBM Db2 HADR (MS Azure) - Fence Agent Packages for RHEL
  ansible.builtin.package:
    name:
      - fence-agents-azure-arm
      - socat
    state: present
  when: ansible_os_family == 'RedHat'

- name: SAP HA AnyDB - IBM Db2 HADR (MS Azure) - Fence Agent Packages for SLES
  ansible.builtin.package:
    name:
      - fence-agents
      - socat
    state: present
  when: ansible_os_family == 'Suse'

- name: SAP HA AnyDB - IBM Db2 HADR (MS Azure) - Azure CLI Repo Key
  ansible.builtin.rpm_key:
    state: present
    key: https://packages.microsoft.com/keys/microsoft.asc

- name: SAP HA AnyDB - IBM Db2 HADR (MS Azure) - Azure CLI Repo Package for RHEL 9
  ansible.builtin.package:
    name: https://packages.microsoft.com/config/rhel/9.0/packages-microsoft-prod.rpm
    state: present
  when:
    - ansible_os_family == "RedHat"
    - ansible_distribution_major_version == "9"

- name: SAP HA AnyDB - IBM Db2 HADR (MS Azure) - Azure CLI Repo Package for RHEL 8
  ansible.builtin.package:
    name: https://packages.microsoft.com/config/rhel/8/packages-microsoft-prod.rpm
    state: present
  when:
    - ansible_os_family == "RedHat"
    - ansible_distribution_major_version == "8"

- name: SAP HA AnyDB - IBM Db2 HADR (MS Azure) - Azure CLI Repo for SLES
  community.general.zypper_repository:
    name: Azure CLI
    repo: https://packages.microsoft.com/yumrepos/azure-cli
    state: present
    auto_import_keys: true
  when: ansible_os_family == 'Suse'

- name: SAP HA AnyDB - IBM Db2 HADR (MS Azure) - Azure CLI Package
  ansible.builtin.package:
    name: azure-cli
    state: present


# IBM Db2 HADR on MS Azure VMs
# www.ibm.com/support/pages/node/6830479
# Older documentation - www.ibm.com/support/pages/node/6829813
# Legacy documentation - www.ibm.com/support/pages/node/6465977


# db2cm script must run as root
# When Virtual IP is already attached to OS Network Interface as Secondary IP
# (in advance by sap_vm_temp_vip or previous db2cm run), will cause
# "Error: ip address is pingable, use another ip address in the subnet that is not pingable."
# Reasons for noqa:
# - no-changed-when: Db2 command will error if already exists and not perform changes
- name: SAP HA AnyDB - IBM Db2 HADR (MS Azure) - Primary Node - Create Virtual IP address for Primary Node using db2cm # noqa no-changed-when
  ansible.builtin.shell: |
    export ibmdb2_sid="{{ sap_ha_install_anydb_ibmdb2_sid }}"
    export ibmdb2_instance="db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}"
    /db2/$ibmdb2_instance/sqllib/bin/db2cm -create -primaryVIP "{{ sap_ha_install_anydb_ibmdb2_vip_primary_ip_address }}" -db $ibmdb2_sid -instance $ibmdb2_instance
  register: __sap_ha_install_anydb_ibmdb2_config_msazure_1
  when:
    - sap_ha_install_anydb_ibmdb2_hostname_primary == inventory_hostname_short
    - __sap_ha_install_anydb_ibmdb2_platform == "cloud_msazure_vm"
  failed_when: not __sap_ha_install_anydb_ibmdb2_config_msazure_1.rc == 0 and not 'ip address is pingable' in __sap_ha_install_anydb_ibmdb2_config_msazure_1.stdout

# Setting to be performed on both Primary and Secondary node
# Reasons for noqa:
# - no-changed-when: Db2 mandates use of AWS CLI for credentials instead of credential configuration directly via IBM Db2 selected Pacemaker Shell (crmsh)
- name: SAP HA AnyDB - IBM Db2 HADR (MS Azure) - Primary and Secondary Node - Provide MS Azure CLI credentials # noqa no-changed-when
  ansible.builtin.shell: |
    az login --service-principal -u "{{ sap_ha_install_anydb_ibmdb2_msazure_app_client_id }}" -p "{{ sap_ha_install_anydb_ibmdb2_msazure_app_client_secret }}" --tenant "{{ sap_ha_install_anydb_ibmdb2_msazure_tenant_id }}"
  register: __sap_ha_install_anydb_ibmdb2_config_msazure_credentials
  when:
    - __sap_ha_install_anydb_ibmdb2_platform == "cloud_msazure_vm"

# db2cm script must run as root
# Reasons for noqa:
# - no-changed-when: Db2 command will error if already exists and not perform changes
- name: SAP HA AnyDB - IBM Db2 HADR (MS Azure) - Primary Node - Create Linux Pacemaker Fence Agent instantiation using db2cm # noqa no-changed-when
  ansible.builtin.shell: |
    export ibmdb2_sid="{{ sap_ha_install_anydb_ibmdb2_sid }}"
    export ibmdb2_instance="db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}"
    export DB2_AZURE_SP_LOGIN="{{ sap_ha_install_anydb_ibmdb2_msazure_app_client_id }}"
    export DB2_AZURE_SP_PASSWD="{{ sap_ha_install_anydb_ibmdb2_msazure_app_client_secret }}"
    /db2/$ibmdb2_instance/sqllib/bin/db2cm -create -azure -fence
  register: __sap_ha_install_anydb_ibmdb2_config_msazure_2
  when:
    - sap_ha_install_anydb_ibmdb2_hostname_primary == inventory_hostname_short
    - __sap_ha_install_anydb_ibmdb2_platform == "cloud_msazure_vm"
  failed_when: not __sap_ha_install_anydb_ibmdb2_config_msazure_2.rc == 0 and not 'already configured' in __sap_ha_install_anydb_ibmdb2_config_msazure_2.stdout

# db2cm script must run as root
# Reasons for noqa:
# - no-changed-when: Db2 command will error if already exists and not perform changes
- name: SAP HA AnyDB - IBM Db2 HADR (MS Azure) - Primary Node - Create Linux Pacemaker Resource Agent instantiation for azure-lb using db2cm # noqa no-changed-when
  ansible.builtin.shell: |
    export ibmdb2_sid="{{ sap_ha_install_anydb_ibmdb2_sid }}"
    export ibmdb2_instance="db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}"
    export DB2_AZURE_SP_LOGIN="{{ sap_ha_install_anydb_ibmdb2_msazure_app_client_id }}"
    export DB2_AZURE_SP_PASSWD="{{ sap_ha_install_anydb_ibmdb2_msazure_app_client_secret }}"
    /db2/$ibmdb2_instance/sqllib/bin/db2cm -create -azure -primarylbl "{{ sap_ha_install_anydb_ibmdb2_msazure_lb_health_check_port }}" -db $ibmdb2_sid -instance $ibmdb2_instance
  register: __sap_ha_install_anydb_ibmdb2_config_msazure_3
  when:
    - sap_ha_install_anydb_ibmdb2_hostname_primary == inventory_hostname_short
    - __sap_ha_install_anydb_ibmdb2_platform == "cloud_msazure_vm"
  failed_when: not __sap_ha_install_anydb_ibmdb2_config_msazure_3.rc == 0 and not 'already exists' in __sap_ha_install_anydb_ibmdb2_config_msazure_3.stdout

# db2cm script must run as root
# Reasons for noqa:
# - no-changed-when: Db2 command will error if already exists and not perform changes
- name: SAP HA AnyDB - IBM Db2 HADR (MS Azure) - Primary Node - Start Linux Pacemaker cluster and IBM Db2 HADR functionality # noqa no-changed-when
  ansible.builtin.shell: |
    export ibmdb2_sid="{{ sap_ha_install_anydb_ibmdb2_sid }}"
    export ibmdb2_instance="db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}"
    export anydb_primary="{{ sap_ha_install_anydb_ibmdb2_hostname_primary }}"
    export anydb_secondary="{{ sap_ha_install_anydb_ibmdb2_hostname_secondary }}"

    # Assume 1 OS Network Interface until improvements can be made
    export anydb_primary_nic="{{ hostvars[sap_ha_install_anydb_ibmdb2_hostname_primary].ansible_default_ipv4.interface }}"
    export anydb_secondary_nic="{{ hostvars[sap_ha_install_anydb_ibmdb2_hostname_secondary].ansible_default_ipv4.interface }}"

    /db2/$ibmdb2_instance/sqllib/bin/db2cm -enable -all
    /db2/$ibmdb2_instance/sqllib/bin/db2cm -enable -instance $ibmdb2_instance -host $anydb_primary -publicEthernet $anydb_primary_nic -host $anydb_secondary -publicEthernet $anydb_secondary_nic -remote_cmd "ssh -q -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"
  register: __sap_ha_install_anydb_ibmdb2_config_msazure_4
  when:
    - sap_ha_install_anydb_ibmdb2_hostname_primary == inventory_hostname_short
    - __sap_ha_install_anydb_ibmdb2_platform == "cloud_msazure_vm"

# Deletion commands:
# export ibmdb2_sid=""
# export ibmdb2_instance=""
# export anydb_primary=""
# /db2/$ibmdb2_instance/sqllib/bin/db2cm -delete -primaryVIP -db $ibmdb2_sid -instance $ibmdb2_instance
# /db2/$ibmdb2_instance/sqllib/bin/db2cm -delete -azure -primarylbl -db $ibmdb2_sid -instance $ibmdb2_instance
# /db2/$ibmdb2_instance/sqllib/bin/db2cm -delete -azure -fence
# /db2/$ibmdb2_instance/sqllib/bin/db2cm -delete -instance $ibmdb2_instance -host $anydb_primary
# /db2/$ibmdb2_instance/sqllib/bin/db2cm -delete -db $ibmdb2_sid -instance $ibmdb2_instance
# /db2/$ibmdb2_instance/sqllib/bin/db2cm -delete -cluster -db $ibmdb2_sid -instance $ibmdb2_instance
