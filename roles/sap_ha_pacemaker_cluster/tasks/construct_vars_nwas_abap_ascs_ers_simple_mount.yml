# SPDX-License-Identifier: Apache-2.0
---
# ASCS ERS simple mount cluster is ENSA2.

### Resources
# ASCS SAPStartSrv resource definition
- name: "SAP HA Prepare Pacemaker - Add resource: SAPStartSrv for ABAP SAP Central Service (ASCS)"
  ansible.builtin.set_fact:
    __sap_ha_pacemaker_cluster_resource_primitives: "{{ __sap_ha_pacemaker_cluster_resource_primitives + [__resource_sapstartsrv] }}"
  vars:
    __resource_sapstartsrv:
      id: "{{ __sap_ha_pacemaker_cluster_nwas_ascs_sapstartsrv_resource_name }}"
      agent: "{{ __sap_ha_pacemaker_cluster_resource_agents.sapstartsrv }}"
      instance_attrs:
        - attrs:
            - name: InstanceName
              value: "{{ __sap_ha_pacemaker_cluster_nwas_ascs_sapinstance_instance_name }}"
      operations:
        - action: monitor
          attrs:
            - name: timeout
              value: 20s
            - name: interval
              value: "{{ '120s' if ansible_os_family == 'Suse' else '0s' }}"
            - name: enabled
              value: 'false'
  when:
    - __resource_sapstartsrv.id not in (__sap_ha_pacemaker_cluster_resource_primitives | map(attribute='id'))

# ERS SAPStartSrv resource definition
- name: "SAP HA Prepare Pacemaker - Add resource: SAPStartSrv for Enqueue Replication Service (ERS)"
  ansible.builtin.set_fact:
    __sap_ha_pacemaker_cluster_resource_primitives: "{{ __sap_ha_pacemaker_cluster_resource_primitives + [__resource_sapstartsrv] }}"
  vars:
    __resource_sapstartsrv:
      id: "{{ __sap_ha_pacemaker_cluster_nwas_ers_sapstartsrv_resource_name }}"
      agent: "{{ __sap_ha_pacemaker_cluster_resource_agents.sapstartsrv }}"
      instance_attrs:
        - attrs:
            - name: InstanceName
              value: "{{ __sap_ha_pacemaker_cluster_nwas_ers_sapinstance_instance_name }}"
      operations:
        - action: monitor
          attrs:
            - name: timeout
              value: 20s
            - name: interval
              value: "{{ '120s' if ansible_os_family == 'Suse' else '0s' }}"
            - name: enabled
              value: 'false'
  when:
    - __resource_sapstartsrv.id not in (__sap_ha_pacemaker_cluster_resource_primitives | map(attribute='id'))


# ASCS instance resource definition
- name: "SAP HA Prepare Pacemaker - Add resource: SAPInstance for ABAP SAP Central Service (ASCS)"
  ansible.builtin.set_fact:
    __sap_ha_pacemaker_cluster_resource_primitives: "{{ __sap_ha_pacemaker_cluster_resource_primitives + [__resource_sapinstance] }}"
  vars:
    __resource_sapinstance:
      id: "{{ __sap_ha_pacemaker_cluster_nwas_ascs_sapinstance_resource_name }}"
      agent: "ocf:heartbeat:SAPInstance"
      instance_attrs:
        - attrs:
            - name: InstanceName
              value: "{{ __sap_ha_pacemaker_cluster_nwas_ascs_sapinstance_instance_name }}"
            - name: START_PROFILE
              value: "{{ __sap_ha_pacemaker_cluster_nwas_ascs_sapinstance_start_profile_string }}"
            - name: AUTOMATIC_RECOVER
              value: "{{ __sap_ha_pacemaker_cluster_nwas_cs_sapinstance_automatic_recover_bool | string }}"
            - name: MINIMAL_PROBE
              value: true
      meta_attrs:
        - attrs:
            - name: resource-stickiness
              value: "{{ __sap_ha_pacemaker_cluster_nwas_cs_sapinstance_resource_stickiness }}"
      operations:
        # TODO: Add values for start and stop when they are published.
        - action: monitor
          attrs:
            - name: interval
              value: 11
            - name: on-fail
              value: restart
            - name: timeout
              value: 60
  when:
    - __resource_sapinstance.id not in (__sap_ha_pacemaker_cluster_resource_primitives | map(attribute='id'))


# ERS instance resource definition
- name: "SAP HA Prepare Pacemaker - Add resource: SAPInstance for Enqueue Replication Service (ERS)"
  ansible.builtin.set_fact:
    __sap_ha_pacemaker_cluster_resource_primitives: "{{ __sap_ha_pacemaker_cluster_resource_primitives + [__resource_sapinstance_ers] }}"
  vars:
    __resource_sapinstance_ers:
      id: "{{ __sap_ha_pacemaker_cluster_nwas_ers_sapinstance_resource_name }}"
      agent: "ocf:heartbeat:SAPInstance"
      instance_attrs:
        - attrs:
            - name: InstanceName
              value: "{{ __sap_ha_pacemaker_cluster_nwas_ers_sapinstance_instance_name }}"
            - name: START_PROFILE
              value: "{{ __sap_ha_pacemaker_cluster_nwas_ers_sapinstance_start_profile_string }}"
            - name: AUTOMATIC_RECOVER
              value: "{{ __sap_ha_pacemaker_cluster_nwas_ers_sapinstance_automatic_recover_bool | string }}"
            - name: IS_ERS
              value: true
            - name: MINIMAL_PROBE
              value: true
      operations:
        # TODO: Add values for start and stop when they are published.
        - action: monitor
          attrs:
            - name: interval
              value: 11
            - name: on-fail
              value: restart
            - name: timeout
              value: 60
  when:
    - __resource_sapinstance_ers.id not in (__sap_ha_pacemaker_cluster_resource_primitives | map(attribute='id'))


### Groups
# ASCS group consists of resources in this order:
# - ASCS VIP
# - ASCS SAPStartSrv
# - ASCS SAPInstance
- name: "SAP HA Prepare Pacemaker - Add resource group for ASCS resources"
  ansible.builtin.set_fact:
    __sap_ha_pacemaker_cluster_resource_groups: "{{ __sap_ha_pacemaker_cluster_resource_groups + [__ascs_group] }}"
  vars:
    __ascs_group:
      id: "{{ __sap_ha_pacemaker_cluster_vip_nwas_ascs_resource_group_name }}"
      resource_ids: |
        {% set resource_ids_list = [] %}
        {%- for resource in
          __sap_ha_pacemaker_cluster_vip_nwas_ascs_resource_name,
          __sap_ha_pacemaker_cluster_nwas_ascs_sapstartsrv_resource_name,
          __sap_ha_pacemaker_cluster_nwas_ascs_sapinstance_resource_name,
          __sap_ha_pacemaker_cluster_healthcheck_nwas_ascs_resource_name %}
          {%- if resource | length > 0
            and resource in (__sap_ha_pacemaker_cluster_resource_primitives | map(attribute='id')) %}
            {%- set ids = resource_ids_list.append(resource) %}
          {%- endif %}
        {%- endfor %}
        {{ resource_ids_list }}
      meta_attrs:
        - attrs:
            - name: resource-stickiness
              value: "{{ sap_ha_pacemaker_cluster_nwas_cs_group_stickiness }}"
  when:
    - __ascs_group.id is not in (__sap_ha_pacemaker_cluster_resource_groups | map(attribute='id'))


# ERS group consists of resources in this order:
# - ERS VIP
# - ERS SAPStartSrv
# - ERS SAPInstance
- name: "SAP HA Prepare Pacemaker - Add resource group for ERS resources"
  ansible.builtin.set_fact:
    __sap_ha_pacemaker_cluster_resource_groups: "{{ __sap_ha_pacemaker_cluster_resource_groups + [__ers_group] }}"
  vars:
    __ers_group:
      id: "{{ __sap_ha_pacemaker_cluster_vip_nwas_ers_resource_group_name }}"
      resource_ids: |
        {% set resource_ids_list = [] %}
        {%- for resource in
          __sap_ha_pacemaker_cluster_vip_nwas_ers_resource_name,
          __sap_ha_pacemaker_cluster_nwas_ers_sapstartsrv_resource_name,
          __sap_ha_pacemaker_cluster_nwas_ers_sapinstance_resource_name,
          __sap_ha_pacemaker_cluster_healthcheck_nwas_ers_resource_name %}
          {%- if resource | length > 0
            and resource in (__sap_ha_pacemaker_cluster_resource_primitives | map(attribute='id')) %}
            {%- set ids = resource_ids_list.append(resource) %}
          {%- endif %}
        {%- endfor %}
        {{ resource_ids_list }}
  when:
    - __ers_group.id is not in (__sap_ha_pacemaker_cluster_resource_groups | map(attribute='id'))

- name: "SAP HA Prepare Pacemaker - Display VIP resource group definition if any were built"
  ansible.builtin.debug:
    var: __sap_ha_pacemaker_cluster_resource_groups
  when:
    - __sap_ha_pacemaker_cluster_resource_groups is defined
    - __sap_ha_pacemaker_cluster_resource_groups | length > 0


### Constraints
# ERS and ASCS resource groups should try to avoid running on the same node
- name: "SAP HA Prepare Pacemaker - Add colocation constraint: ERS avoids to run on the ASCS node"
  ansible.builtin.set_fact:
    __sap_ha_pacemaker_cluster_constraints_colocation: "{{ __sap_ha_pacemaker_cluster_constraints_colocation + [__constraint_colo_ers] }}"
  vars:
    __constraint_colo_ers:
      id: "{{ __sap_ha_pacemaker_cluster_nwas_colocation_ascs_no_ers_name }}"
      resource_leader:
        id: "{{ __sap_ha_pacemaker_cluster_vip_nwas_ascs_resource_group_name }}"
        role: started
      resource_follower:
        id: "{{ __sap_ha_pacemaker_cluster_vip_nwas_ers_resource_group_name }}"
      options:
        - name: score
          value: -5000
  when:
    - __constraint_colo_ers.resource_follower not in (__sap_ha_pacemaker_cluster_constraints_colocation | map(attribute='resource_follower'))

# Order: ERS should be stopped after ASCS started.
# After a failover, ASCS must start and read replication data from ERS, before ERS should be stopped
# to fail over to the other node following the colocation constraint.
- name: "SAP HA Prepare Pacemaker - Add order constraint: first start ASCS group, then stop ERS group"
  ansible.builtin.set_fact:
    __sap_ha_pacemaker_cluster_constraints_order: "{{ __sap_ha_pacemaker_cluster_constraints_order + [__constraint_order_ascs_ers] }}"
  vars:
    __constraint_order_ascs_ers:
      id: "{{ __sap_ha_pacemaker_cluster_nwas_order_ascs_first_name }}"
      resource_first:
        id: "{{ __sap_ha_pacemaker_cluster_vip_nwas_ascs_resource_group_name }}"
        action: start
      resource_then:
        id: "{{ __sap_ha_pacemaker_cluster_vip_nwas_ers_resource_group_name }}"
        action: stop
      options:
        - name: symmetrical
          value: "false"
        - name: kind
          value: Optional
