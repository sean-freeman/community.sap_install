---
# Reminder: This file is included in a loop over a dictionary.

# id: "hc_vip_{{ sap_ha_pacemaker_cluster_hana_sid }}_{{ sap_ha_pacemaker_cluster_hana_instance_nr }}_{{ ansible_hostname | replace('-','_') }}"
- name: "SAP HA Prepare Pacemaker - IBM Cloud VS - haproxy resource agent - Add resource: IBM Cloud Load Balancer Private ALB L-7 (or NLB L-4) for VIP routing"
  ansible.builtin.set_fact:
    __sap_ha_pacemaker_cluster_resource_primitives: "{{ __sap_ha_pacemaker_cluster_resource_primitives + [__health_check] }}"
  vars:
    __health_check:
      id: "hc_{{ vip_list_item.key }}"
      agent: "{{ __sap_ha_pacemaker_cluster_available_vip_agents[sap_ha_pacemaker_cluster_vip_method].agent }}"
      operations:
        - action: monitor
          attrs:
            - name: interval
              value: 10
            - name: timeout
              value: 20
  when:
    - __health_check.id is not in (__sap_ha_pacemaker_cluster_resource_primitives | map(attribute='id'))
    - ('hc_' + vip_list_item.key) not in (__sap_ha_pacemaker_cluster_resource_primitives | map(attribute='id'))
    - sap_ha_pacemaker_cluster_vip_method == 'ibmcloud_alb_haproxy'
    # - sap_ha_pacemaker_cluster_host_type | select('search', 'hana') | length > 0

# IBM Cloud Load Balancer will own and control the Virtual IP (VIP) routing and failover
# When Linux Pacemaker failover to secondary occurs, the primary will cease Health Check response to IBM Cloud Load Balancer,
# the secondary will emit Health Check response to IBM Cloud Load Balancer,
# and then the IBM Cloud Load Balancer will automatically route traffic to secondary;
# therefore Linux Pacemaker does not require a Resource (e.g. IPAddr2 Resource Agent) allocated for the VIP
- name: "SAP HA Prepare Pacemaker - IBM Cloud VS - Reset Linux Pacemaker Resource Definition for VIP as controlled by IBM Cloud Load Balancer"
  ansible.builtin.set_fact:
    __sap_ha_pacemaker_cluster_vip_resource_definition: {}
