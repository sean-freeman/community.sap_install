---
# Requirement to enable the fencing resource to function.

- name: "SAP HA Prepare Pacemaker - IBM Cloud VS - Install haproxy"
  ansible.builtin.package:
    name: haproxy
    state: present

# - name: "SAP HA Prepare Pacemaker - IBM Cloud VS - Create haproxy log directory for rsyslog"
#   ansible.builtin.file:
#     path: /var/log/haproxy
#     state: directory
#     mode: '0755'
#
# - name: "SAP HA Prepare Pacemaker - IBM Cloud VS - Create haproxy config for rsyslog"
#   ansible.builtin.copy:
#     dest: /etc/rsyslog.d/haproxy.conf
#     mode: '0644'
#     content: |
#       # Additional socket in haproxy's chroot
#       # to allow logging via /dev/log to chroot'ed HAProxy processes
#       $AddUnixListenSocket /var/lib/haproxy/dev/log
#
#       # Send HAProxy messages to a dedicated logfile
#       :programname,startswith,"haproxy" /var/log/haproxy/haproxy.log
#
# - name: "SAP HA Prepare Pacemaker - IBM Cloud VS - rsyslog service restart"
#   ansible.builtin.service:
#     name: rsyslog
#     state: restarted
#     enabled: true

- name: "SAP HA Install Pacemaker - IBM Cloud VS - Check if haproxy service template exists"
  ansible.builtin.stat:
    path: /etc/systemd/system/haproxy@.service
  register: __sap_ha_pacemaker_cluster_register_haproxy_template

- name: "SAP HA Install Pacemaker - IBM Cloud VS - Create haproxy service template"
  ansible.builtin.copy:
    dest: /etc/systemd/system/haproxy@.service
    remote_src: true
    src: /usr/lib/systemd/system/haproxy.service
    mode: '0644'
  when:
    - not __sap_ha_pacemaker_cluster_register_haproxy_template.stat.exists

- name: "SAP HA Install Pacemaker - IBM Cloud VS - Update haproxy service template description"
  ansible.builtin.lineinfile:
    backup: true
    path: /etc/systemd/system/haproxy@.service
    regexp: '^Description='
    line: 'Description=HAProxy Load Balancer %i'
    state: present
    insertafter: '^[Unit]$'
  notify: "systemd daemon-reload"

- name: "SAP HA Install Pacemaker - IBM Cloud VS - Update haproxy service template environment"
  ansible.builtin.lineinfile:
    backup: true
    path: /etc/systemd/system/haproxy@.service
    regexp: '^Environment='
    line: 'Environment="CONFIG=/etc/haproxy/haproxy-%i.cfg" "PIDFILE=/run/haproxy-%i.pid"'
    state: present
    insertafter: '^[Service]$'
  notify: "systemd daemon-reload"

- name: "SAP HA Install Pacemaker - IBM Cloud VS - Update haproxy service template environment"
  ansible.builtin.lineinfile:
    backup: true
    path: /etc/systemd/system/haproxy@.service
    regexp: '^Environment='
    line: 'Environment="CONFIG=/etc/haproxy/haproxy-%i.cfg" "PIDFILE=/run/haproxy-%i.pid"'
    state: present
    insertafter: '^[Service]$'
  notify: "systemd daemon-reload"

- name: "SAP HA Install Pacemaker - IBM Cloud VS - Define healthcheck details for HANA"
  ansible.builtin.set_fact:
    __sap_ha_pacemaker_cluster_healthcheck_list_hana:
      - name: "{{ sap_ha_pacemaker_cluster_healthcheck_hana_primary_id }}"
        port: "{{ sap_ha_pacemaker_cluster_healthcheck_hana_primary_port }}"
    # If no custom port is defined, calculate the port for the secondary
    # by adding 10, to avoid a conflict with the port for the primary hc port.
      - name: "{{ sap_ha_pacemaker_cluster_healthcheck_hana_secondary_id }}"
        port: >-
          {% if sap_ha_pacemaker_cluster_vip_hana_secondary_ip_address | length > 0 -%}
            {{ sap_ha_pacemaker_cluster_healthcheck_hana_secondary_port }}
          {%- else %}0{%- endif %}
  when:
    - sap_ha_pacemaker_cluster_host_type | select('search', 'hana_scaleup') | length > 0

- name: "SAP HA Install Pacemaker - IBM Cloud VS - Define healthcheck details for NW ASCS/ERS"
  ansible.builtin.set_fact:
    __sap_ha_pacemaker_cluster_healthcheck_list_ascs:
      - name: "{{ sap_ha_pacemaker_cluster_healthcheck_nwas_abap_ascs_id }}"
        port: "{{ sap_ha_pacemaker_cluster_healthcheck_nwas_abap_ascs_port }}"
      - name: "{{ sap_ha_pacemaker_cluster_healthcheck_nwas_abap_ers_id }}"
        port: "{{ sap_ha_pacemaker_cluster_healthcheck_nwas_abap_ers_port }}"
  when:
    - sap_ha_pacemaker_cluster_host_type | select('search', 'nwas_abap_ascs') | length > 0

- name: "SAP HA Install Pacemaker - GCP CE VM - Create haproxy config for HANA instances"
  ansible.builtin.blockinfile:
    backup: false
    create: true
    path: "/etc/haproxy/haproxy-{{ haproxy_item.name }}.cfg"
    mode: "0644"
    owner: root
    group: root
    marker: "# {mark} Created by Ansible role sap_ha_pacemaker_cluster"
    block: |
      global
          chroot      /var/lib/haproxy
          pidfile     /var/run/haproxy-%i.pid
          user        haproxy
          group       haproxy
          daemon

      defaults
          mode                    tcp
          log                     global
          option                  dontlognull
          option                  redispatch
          retries                 3
          timeout queue           1m
          timeout connect         10s
          timeout client          1m
          timeout server          1m
          timeout check           10s
          maxconn                 3000

      # Listener for SAP healthcheck
      listen healthcheck
          bind *:{{ haproxy_item.port }}
  loop: "{{ __sap_ha_pacemaker_cluster_healthcheck_list_hana }}"
  loop_control:
    loop_var: haproxy_item
    label: "{{ haproxy_item.name }}: {{ haproxy_item.port }}"
  when:
    - sap_ha_pacemaker_cluster_host_type | select('search', 'hana_scaleup') | length > 0
    - haproxy_item.port | length > 4

- name: "SAP HA Install Pacemaker - GCP CE VM - Create haproxy config for NWAS ASCS/ERS instances"
  ansible.builtin.blockinfile:
    create: true
    path: "/etc/haproxy/haproxy-{{ haproxy_item.name }}.cfg"
    mode: "0644"
    owner: root
    group: root
    marker: "# {mark} Created by Ansible role sap_ha_pacemaker_cluster"
    block: |
      global
          chroot      /var/lib/haproxy
          pidfile     /var/run/haproxy-%i.pid
          user        haproxy
          group       haproxy
          daemon

      defaults
          mode                    tcp
          log                     global
          option                  dontlognull
          option                  redispatch
          retries                 3
          timeout queue           1m
          timeout connect         10s
          timeout client          1m
          timeout server          1m
          timeout check           10s
          maxconn                 3000

      # Listener for SAP healthcheck
      listen healthcheck
          bind *:{{ haproxy_item.port }}
  loop: "{{ __sap_ha_pacemaker_cluster_healthcheck_list_ascs }}"
  loop_control:
    loop_var: haproxy_item
    label: "{{ haproxy_item.name }}: {{ haproxy_item.port }}"
  when:
    - sap_ha_pacemaker_cluster_host_type | select('search', 'nwas_abap_ascs') | length > 0


# - name: "SAP HA Prepare Pacemaker - IBM Cloud VS - haproxy listener configuration"
#  ansible.builtin.blockinfile:
#    state: present
#    insertafter: EOF
#    dest: /etc/haproxy/haproxy.cfg
#    marker_begin: "---- haproxy health check listener ----"
#    marker_end: "----"
#    content: |
  # when:
  #   - sap_ha_pacemaker_cluster_host_type | select('search', 'hana') | length > 0

- name: "SAP HA Prepare Pacemaker - IBM Cloud VS - haproxy service start (without enable on boot)"
  ansible.builtin.service:
    name: haproxy
    state: started
    enabled: false # Do not start on boot
