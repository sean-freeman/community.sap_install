# SPDX-License-Identifier: Apache-2.0
---
# Variables specific on IBM Cloud platform, Virtual Servers (x86_64)
#
# TODO: make sure to first respect 'ha_cluster' native variables

__sap_ha_pacemaker_cluster_fence_agent_packages_platform:
  "{{ __sap_ha_pacemaker_cluster_fence_agent_packages_dict.cloud_ibmcloud_vs | d([]) }}"

__sap_ha_pacemaker_cluster_platform_extra_packages:
  "{{ __sap_ha_pacemaker_cluster_platform_extra_packages_dict.cloud_ibmcloud_vs | d([]) }}"

__sap_ha_pacemaker_cluster_repos:
  "{{ __sap_ha_pacemaker_cluster_repos_dict.cloud_ibmcloud_vs | d([]) }}"


# Stonith dictionary for default stonith agents.
# Custom stonith resource can be defined using sap_ha_pacemaker_cluster_stonith_custom
__sap_ha_pacemaker_cluster_stonith_default_dict:
  generic:
    id: "rsc_fence_ibm_vpc"
    agent: "stonith:fence_ibm_vpc"
    instance_attrs:
      - attrs:
          - name: apikey
            value: "{{ sap_ha_pacemaker_cluster_ibmcloud_api_key }}"
          - name: region
            value: "{{ sap_ha_pacemaker_cluster_ibmcloud_region }}"

          # String of cluster hosts defined in include_vars_platform
          - name: pcmk_host_map
            value: "{{ __sap_ha_pacemaker_cluster_pcmk_host_map }}"
          - name: pcmk_monitor_timeout
            value: 600

# Select __sap_ha_pacemaker_cluster_stonith_default
__sap_ha_pacemaker_cluster_stonith_default:
  "{{ __sap_ha_pacemaker_cluster_stonith_default_dict.generic }}"


# Default corosync options - Platform specific
# These options combined with __sap_ha_pacemaker_cluster_corosync_totem_default (Same options are overwritten).
__sap_ha_pacemaker_cluster_corosync_totem_platform_dict:
  generic:
    options:
      token: 30000

__sap_ha_pacemaker_cluster_corosync_totem_platform:
  "{{ __sap_ha_pacemaker_cluster_corosync_totem_platform_dict.generic }}"


# Platform specific VIP handling
sap_ha_pacemaker_cluster_vip_method: "{{ __sap_ha_pacemaker_cluster_vip_method_dict.cloud_ibmcloud_vs | d('ibmcloud_alb_haproxy') }}"

# For HAPROXY an non-empty port default is required to enter the resource creation flow.
# TODO: task logic that configures actual haproxy listening ports,
# otherwise pairs like ASCS/ERS will conflict
sap_ha_pacemaker_cluster_healthcheck_hana_primary_port: "620{{ __sap_ha_pacemaker_cluster_hana_instance_nr }}"
sap_ha_pacemaker_cluster_healthcheck_hana_secondary_port: >-
  {% if __sap_ha_pacemaker_cluster_vip_hana_secondary_ip_address | length > 0 -%}
    620{{ __sap_ha_pacemaker_cluster_hana_instance_nr | int + 1 }}
  {%- else %}{% endif %}
sap_ha_pacemaker_cluster_healthcheck_nwas_ascs_port: "620{{ __sap_ha_pacemaker_cluster_nwas_ascs_instance_nr }}"
sap_ha_pacemaker_cluster_healthcheck_nwas_ers_port: "620{{ __sap_ha_pacemaker_cluster_nwas_ers_instance_nr }}"
sap_ha_pacemaker_cluster_healthcheck_nwas_abap_pas_port: "620{{ __sap_ha_pacemaker_cluster_nwas_abap_pas_instance_nr }}"
sap_ha_pacemaker_cluster_healthcheck_nwas_abap_aas_port: "620{{ __sap_ha_pacemaker_cluster_nwas_abap_aas_instance_nr }}"


__sap_ha_pacemaker_cluster_available_vip_agents:

  # Refer to IBM Cloud Load Balancer - Private Network Load Balancer (NLB Layer 4)
  # for HA within 1 AZ of 1 Region: https://cloud.ibm.com/docs/vpc?topic=vpc-network-load-balancers
  #
  # Refer to IBM Cloud Load Balancer - Private Application Load Balancer (ALB Layer 7)
  # for HA across 2 AZ of 1 Region: https://cloud.ibm.com/docs/vpc?topic=vpc-load-balancers-about
  #
  # The IBM Cloud Load Balancer's Back-end Pool Health Check will poll for connection response
  # from a host listening port (using a designated OS process such as netcat, socat or HAProxy).

  # Use haproxy daemon to listen for and respond to health check probe monitoring private network
  # requests from IBM Cloud Application Load Balancer (ALB),
  # if failure to respond then the Load Balancer will perform failover activities.
  ibmcloud_alb_haproxy:
    agent: "service:haproxy"
