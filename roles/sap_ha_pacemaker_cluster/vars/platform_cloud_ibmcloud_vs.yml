---
# Variables specific on IBM Cloud platform, Virtual Servers (x86_64)
#
# TODO: make sure to first respect 'ha_cluster' native variables

sap_ha_pacemaker_cluster_fence_agent_packages:
  - fence-agents-ibm-vpc

#__sap_ha_pacemaker_cluster_platform_extra_packages:
#  -

__sap_ha_pacemaker_cluster_repos:
  - id: "rhel-{{ ansible_distribution_major_version }}-for-{{ ansible_architecture }}-highavailability-e4s-rpms"
    name: High Availability E4S (4-Year)
#  - id: "rhel-{{ ansible_distribution_major_version }}-for-{{ ansible_architecture }}-highavailability-eus-rpms"
#    name: High Availability EUS (2-Year)
#  - id: "rhel-{{ ansible_distribution_major_version }}-for-{{ ansible_architecture }}-highavailability-rpms"
#    name: High Availability

# Predefine
__sap_ha_pacemaker_cluster_ibmcloud_hosts: []

sap_ha_pacemaker_cluster_stonith_default:
  id: "res_fence_ibm_vpc"
  agent: "stonith:fence_ibm_vpc"
  options:
    apikey: "{{ sap_ha_pacemaker_cluster_ibmcloud_api_key }}"
    region: "{{ sap_ha_pacemaker_cluster_ibmcloud_region }}"

# Platform specific VIP handling
sap_ha_pacemaker_cluster_vip_method: haproxy_with_ipaddr
sap_ha_pacemaker_cluster_vip_resource_group_name: vipgroup

__sap_ha_pacemaker_cluster_available_vip_agents:

  # IPaddr2 requires a Virtual IP within a common Network (i.e. 1 VLAN / 1 VPC / 1 VNet), one or more Subnets may be used
  # With this design restriction, IPaddr2 is only to be used for High Availability within a single location (i.e. 1 Availability Zone / Datacenter / Location within 1 Region)
  ipaddr:
    agent: "ocf:heartbeat:IPaddr2"

  # Use haproxy daemon to listen for and respond to health check probe monitoring private network requests from IBM Cloud Application Load Balancer (ALB),
  # if failure to respond then the Load Balancer will perform failover activities
  haproxy_with_ipaddr:
    agent: "ocf:heartbeat:haproxy"
    with: ipaddr
