---
# Variables specific on IBM Cloud platform, Virtual Servers (x86_64)
#
# TODO: make sure to first respect 'ha_cluster' native variables

sap_ha_pacemaker_cluster_fence_agent_packages:
  - fence-agents-ibm-vpc

#__sap_ha_pacemaker_cluster_platform_extra_packages:
#  -

__sap_ha_pacemaker_cluster_repos:
  - id: "rhel-{{ ansible_distribution_major_version }}-for-{{ ansible_architecture }}-highavailability-e4s-rpms"
    name: High Availability E4S (4-Year)
#  - id: "rhel-{{ ansible_distribution_major_version }}-for-{{ ansible_architecture }}-highavailability-eus-rpms"
#    name: High Availability EUS (2-Year)
#  - id: "rhel-{{ ansible_distribution_major_version }}-for-{{ ansible_architecture }}-highavailability-rpms"
#    name: High Availability

# Predefine
__sap_ha_pacemaker_cluster_ibmcloud_hosts: []

sap_ha_pacemaker_cluster_stonith_default:
  id: "res_fence_ibm_vpc"
  agent: "stonith:fence_ibm_vpc"
  options:
    apikey: "{{ sap_ha_pacemaker_cluster_ibmcloud_api_key }}"
    region: "{{ sap_ha_pacemaker_cluster_ibmcloud_region }}"

# Platform specific VIP handling
sap_ha_pacemaker_cluster_vip_method: ibmcloud_alb_haproxy
sap_ha_pacemaker_cluster_vip_resource_group_name: vipgroup

__sap_ha_pacemaker_cluster_available_vip_agents:

  # Refer to IBM Cloud Load Balancer - Private Network Load Balancer (NLB Layer 4) for HA within 1 AZ of 1 Region, https://cloud.ibm.com/docs/vpc?topic=vpc-network-load-balancers
  # Refer to IBM Cloud Load Balancer - Private Application Load Balancer (ALB Layer 7) for HA across 2 AZ of 1 Region, https://cloud.ibm.com/docs/vpc?topic=vpc-load-balancers-about
  # The IBM Cloud Load Balancer's Back-end Pool Health Check will poll for connection response from a host listening port (using a designated OS process such as netcat, socat or HAProxy)

  # Use haproxy daemon to listen for and respond to health check probe monitoring private network requests from IBM Cloud Application Load Balancer (ALB),
  # if failure to respond then the Load Balancer will perform failover activities
  ibmcloud_alb_haproxy:
    agent: "service:haproxy"
