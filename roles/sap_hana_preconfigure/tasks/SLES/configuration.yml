# SPDX-License-Identifier: Apache-2.0
---

# If this is a cluster node on Azure, we need to override to disable tcp timestamps, reuse and recycle.
# This can be done by copying the sapnote file 2382421 from /usr/share/saptune/notes to /etc/saptune/override
# The value can then override in the in the new file
# net.ipv4.tcp_tw_recycle = 0 was removed as it is not relevant for SLES 15+

- name: Disable TCP timestamps, recycle & reuse
  ansible.builtin.blockinfile:
    path: /etc/saptune/override/2382421
    create: true
    backup: true
    owner: root
    group: root
    mode: '0640'
    marker: "<!-- {mark} ANSIBLE MANAGED BLOCK -->"
    block: |
      [sysctl]
      net.ipv4.tcp_timestamps = 0
      net.ipv4.tcp_tw_reuse = 0
  when:
    - sap_hana_preconfigure_saptune_azure
    - __sap_hana_preconfigure_use_saptune


- name: Get current enabled saptune solution
  ansible.builtin.command:
    cmd: "saptune solution enabled"
  register: __sap_hana_preconfigure_register_solution_enabled
  changed_when: false
  failed_when: false
  when: __sap_hana_preconfigure_use_saptune

# Enabled solution contains newline, which has to be removed
- name: Cleanup saptune solution enabled output
  ansible.builtin.set_fact:
    __sap_hana_preconfigure_register_solution_enabled_trim:
      "{{ __sap_hana_preconfigure_register_solution_enabled.stdout | trim | replace('\n', '') }}"
  when: __sap_hana_preconfigure_use_saptune

# Verify SAP Solution before block and revert if found invalid
- name: Verify saptune solution before changes
  ansible.builtin.command:
    cmd: "saptune solution verify {{ sap_hana_preconfigure_saptune_solution }}"
  register: __sap_hana_preconfigure_register_solution_verify_before
  changed_when: false
  failed_when: false
  when:
    - __sap_hana_preconfigure_use_saptune
    - __sap_hana_preconfigure_register_solution_enabled_trim == sap_hana_preconfigure_saptune_solution

- name: Apply saptune solution
  when:
    - __sap_hana_preconfigure_use_saptune
    - sap_hana_preconfigure_saptune_solution_force
      or __sap_hana_preconfigure_register_solution_enabled_trim != sap_hana_preconfigure_saptune_solution
      or __sap_hana_preconfigure_register_solution_verify_before.rc != 0
  block:
    - name: Show current enabled saptune solution
      ansible.builtin.debug:
        msg: "{{ __sap_hana_preconfigure_register_solution_enabled_trim }}"
      when: __sap_hana_preconfigure_register_solution_enabled_trim != ''

    - name: Revert saptune configuration
      ansible.builtin.command:
        cmd: "saptune revert all"
      changed_when: true

    - name: Ensure saptune solution is applied
      ansible.builtin.command:
        cmd: "saptune solution apply {{ sap_hana_preconfigure_saptune_solution }}"
      changed_when: true

    - name: Verify saptune solution after changes
      ansible.builtin.command:
        cmd: "saptune solution verify --show-non-compliant {{ sap_hana_preconfigure_saptune_solution }}"
      changed_when: false
      failed_when: false
      register: __sap_hana_preconfigure_register_solution_verify_after

    - name: Display error if saptune verify failed
      ansible.builtin.fail:
        msg: |
          {{ __sap_hana_preconfigure_register_solution_verify_after.stdout_lines }}
          {{ __sap_hana_preconfigure_register_solution_verify_after.stderr_lines }}
      when: __sap_hana_preconfigure_register_solution_verify_after.rc != 0

    - name: Show applied saptune solution
      ansible.builtin.debug:
        msg: "{{ sap_hana_preconfigure_saptune_solution }}"


- name: Configure - Include configuration actions for required sapnotes
  ansible.builtin.include_tasks: "sapnote/{{ sap_note_line_item.number }}.yml"
  loop: "{{ __sap_hana_preconfigure_sapnotes_versions | difference(['']) }}"
  loop_control:
    loop_var: sap_note_line_item
