---
- name: Takover saptune and enable
  when: __sap_netweaver_preconfigure_run_saptune
  block:
    - name: Ensure sapconf is stopped and disabled
      ansible.builtin.systemd:
        name: sapconf
        state: stopped
        enabled: false

    - name: Make sure that sapconf and tuned are stopped and disabled
      ansible.builtin.command: "saptune service takeover"
      register: __sap_saptune_takeover
      changed_when: __sap_saptune_takeover.rc == 0

    - name: Ensure saptune is running and enabled
      ansible.builtin.systemd:
        name: saptune
        state: started
        enabled: true

    - name: Ensure saptune_check executes correctly
      ansible.builtin.command: saptune_check
      changed_when: false

    - name: Discover active solution
      ansible.builtin.command: saptune solution enabled
      register: __sap_netweaver_preconfigure_register_saptune_status
      changed_when: false

    - name: Set fact for active solution
      ansible.builtin.set_fact:
        # Capture the first block on none whitespace
        __sap_netweaver_preconfigure_fact_solution_configured:
          "{{ (__sap_netweaver_preconfigure_register_saptune_status.stdout | regex_search('(\\S+)', '\\1'))[0] | default('NONE') }}"

    - name: Check if saptune solution needs to be applied
      ansible.builtin.command: "saptune solution verify {{ sap_netweaver_preconfigure_saptune_solution }}"
      register: __sap_netweaver_preconfigure_register_saptune_verify
      changed_when: false # We're only checking, not changing!
      failed_when: false # We expect this to fail if it has not previously been applied

    - name: Ensure no solution is currently applied
      ansible.builtin.command: "saptune solution revert {{ __sap_netweaver_preconfigure_fact_solution_configured }}"
      changed_when: true
      when:
        - __sap_netweaver_preconfigure_fact_solution_configured != 'NONE'
        - __sap_netweaver_preconfigure_register_saptune_verify.rc != 0

    - name: Ensure saptune solution is applied
      ansible.builtin.command: "saptune solution apply {{ sap_netweaver_preconfigure_saptune_solution }}"
      changed_when: true
      when:
        - __sap_netweaver_preconfigure_register_saptune_verify.rc != 0

    - name: Ensure solution was successful
      ansible.builtin.command: "saptune solution verify {{ sap_netweaver_preconfigure_saptune_solution }}"
      changed_when: false # We're only checking, not changing!

- name: Enable sapconf
  when: not __sap_netweaver_preconfigure_run_saptune
  block:
    - name: Enable sapconf service
      ansible.builtin.systemd:
        name: sapconf
        state: started
        enabled: true

    - name: Restart sapconf service
      ansible.builtin.systemd:
        name: sapconf
        state: restarted

- name: Warn if not enough swap space is configured
  ansible.builtin.fail:
    msg: "The system has only {{ ansible_swaptotal_mb }} MB of swap space configured,
      which is less than the minimum required amount of {{ sap_netweaver_preconfigure_min_swap_space_mb }} MB for SAP NetWeaver!"
  ignore_errors: true
  when:
    - ansible_swaptotal_mb < sap_netweaver_preconfigure_min_swap_space_mb|int
    - not sap_netweaver_preconfigure_fail_if_not_enough_swap_space_configured|d(true)

- name: Fail if not enough swap space is configured
  ansible.builtin.fail:
    msg: "The system has only {{ ansible_swaptotal_mb }} MB of swap space configured,
      which is less than the minimum required amount of {{ sap_netweaver_preconfigure_min_swap_space_mb }} MB for SAP NetWeaver!"
  when:
    - ansible_swaptotal_mb < sap_netweaver_preconfigure_min_swap_space_mb|int
    - sap_netweaver_preconfigure_fail_if_not_enough_swap_space_configured|d(true)
